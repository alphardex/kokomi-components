"use strict";var e=require("kokomi.js"),t=require("three"),o=require("gsap"),i=require("lodash");function n(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(o){if("default"!==o){var i=Object.getOwnPropertyDescriptor(e,o);Object.defineProperty(t,o,i.get?i:{enumerable:!0,get:function(){return e[o]}})}})),t.default=e,Object.freeze(t)}var r=n(e),s=n(t);class a extends r.Component{mg;textColor;textSpacing;font;constructor(e,t={}){super(e);const{scroller:o=new r.NormalScroller,shadowColor:i="#03D8F3",textColor:n="#ffffff",textSpacing:a=.05,grid:c=[3,6],font:l="",elList:v=[...document.querySelectorAll(".ct")]}=t;this.textColor=n,this.textSpacing=a,this.font=l;const u=new r.MojiGroup(e,{vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;}",fragmentShader:"#define GLSLIFY 1\nfloat rand(float n){return fract(sin(n)*43758.5453123);}float rand(vec2 n){return fract(sin(dot(n,vec2(12.9898,4.1414)))*43758.5453);}float noise(float p){float fl=floor(p);float fc=fract(p);return mix(rand(fl),rand(fl+1.),fc);}float noise(vec2 n){const vec2 d=vec2(0.,1.);vec2 b=floor(n),f=smoothstep(vec2(0.),vec2(1.),fract(n));return mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);}float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float saturate(float a){return clamp(a,0.,1.);}varying vec2 vUv;uniform float uProgress;uniform float uProgress1;uniform vec2 uGrid;uniform float uGridSize;uniform vec3 uTextColor;uniform vec3 uShadowColor;float getMixer(vec2 p,float pr,float pattern){float width=.5;pr=map(pr,0.,1.,-width,1.);pr=smoothstep(pr,pr+width,p.x);float mixer=1.-saturate(pr*2.-pattern);return mixer;}void main(){vec2 p=vUv;vec2 grid=uGrid;grid.x*=uGridSize;vec2 gridP=vec2(floor(grid.x*p.x),floor(grid.y*p.y));float pattern=noise(gridP);vec4 col=vec4(0.);vec4 l0=vec4(uShadowColor,1.);float pr0=uProgress;float m0=getMixer(p,pr0,pattern);col=mix(col,l0,m0);vec4 l1=vec4(uTextColor,1.);float pr1=uProgress1;float m1=getMixer(p,pr1,pattern);col=mix(col,l1,m1);gl_FragColor=col;}",scroller:o,uniforms:{uProgress:{value:0},uProgress1:{value:0},uGrid:{value:new s.Vector2(c[0],c[1])},uGridSize:{value:1},uShadowColor:{value:new s.Color(i)}},elList:v});this.mg=u,u.container=this.container}addExisting(){this.mg.addExisting(),this.mg.mojis.forEach((e=>{e.textMesh.mesh.material.uniforms.uGridSize.value=e.textMesh.mesh._private_text.length,e.textMesh.mesh.letterSpacing=this.textSpacing;const t=e.el.dataset.webglTextColor||this.textColor;e.textMesh.mesh.material.uniforms.uTextColor.value=new s.Color(t),this.font&&(e.textMesh.mesh.font=this.font)}))}fadeIn(e,t={}){const{duration:i=1.6,stagger:n=.05,delay:r=0}=t;this.mg.mojis&&this.mg.mojis.forEach((t=>{if(!t.el.classList.contains(e))return;const s=i,a=o.timeline(),c=t.textMesh.mesh.material.uniforms;a.to(c.uProgress,{value:1,duration:s}),a.to(c.uProgress1,{value:1,duration:s,delay:r},n)}))}fadeOut(e,t={}){const{duration:i=1.6,stagger:n=.05,delay:r=0}=t;this.mg.mojis&&this.mg.mojis.forEach((t=>{if(!t.el.classList.contains(e))return;const s=i,a=o.timeline(),c=t.textMesh.mesh.material.uniforms;a.to(c.uProgress1,{value:0,duration:s,delay:r}),a.to(c.uProgress,{value:0,duration:s,delay:r},n)}))}}const c=new s.ShaderMaterial({vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;varying vec3 vNormal;varying vec4 vMvPosition;varying vec3 vPosition;uniform vec2 uMouse;uniform float uRandom;uniform float uLayerId;mat2 rotation2d(float angle){float s=sin(angle);float c=cos(angle);return mat2(c,-s,s,c);}mat4 rotation3d(vec3 axis,float angle){axis=normalize(axis);float s=sin(angle);float c=cos(angle);float oc=1.-c;return mat4(oc*axis.x*axis.x+c,oc*axis.x*axis.y-axis.z*s,oc*axis.z*axis.x+axis.y*s,0.,oc*axis.x*axis.y+axis.z*s,oc*axis.y*axis.y+c,oc*axis.y*axis.z-axis.x*s,0.,oc*axis.z*axis.x-axis.y*s,oc*axis.y*axis.z+axis.x*s,oc*axis.z*axis.z+c,0.,0.,0.,0.,1.);}vec2 rotate(vec2 v,float angle){return rotation2d(angle)*v;}vec3 rotate(vec3 v,vec3 axis,float angle){return(rotation3d(axis,angle)*vec4(v,1.)).xyz;}vec3 distort(vec3 p){vec3 tx1=vec3(-uMouse.x*uRandom*.05,-uMouse.y*uRandom*.02,0.);p+=tx1;float angle=iTime*uRandom;p=rotate(p,vec3(0.,1.,0.),angle);vec3 tx2=vec3(-uMouse.x*uRandom*.5,-uMouse.y*uRandom*.2,0.);p+=tx2;p*=(.6-uLayerId*.5);return p;}void main(){vec3 p=position;vec3 N=normal;p=distort(p);N=distort(N);gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;vNormal=N;vMvPosition=modelViewMatrix*vec4(p,1.);vPosition=p;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;varying vec3 vNormal;varying vec4 vMvPosition;varying vec3 vPosition;uniform sampler2D uTexture;uniform vec3 uLightPosition;uniform vec3 uLightColor;uniform float uRandom;uniform vec2 uMouse;mat2 rotation2d(float angle){float s=sin(angle);float c=cos(angle);return mat2(c,-s,s,c);}mat4 rotation3d(vec3 axis,float angle){axis=normalize(axis);float s=sin(angle);float c=cos(angle);float oc=1.-c;return mat4(oc*axis.x*axis.x+c,oc*axis.x*axis.y-axis.z*s,oc*axis.z*axis.x+axis.y*s,0.,oc*axis.x*axis.y+axis.z*s,oc*axis.y*axis.y+c,oc*axis.y*axis.z-axis.x*s,0.,oc*axis.z*axis.x-axis.y*s,oc*axis.y*axis.z+axis.x*s,oc*axis.z*axis.z+c,0.,0.,0.,0.,1.);}vec2 rotate(vec2 v,float angle){return rotation2d(angle)*v;}vec3 rotate(vec3 v,vec3 axis,float angle){return(rotation3d(axis,angle)*vec4(v,1.)).xyz;}float saturate(float a){return clamp(a,0.,1.);}float diffuse(vec3 n,vec3 l){float diff=saturate(dot(n,l));return diff;}float specular(vec3 n,vec3 l,float shininess){float spec=pow(saturate(dot(n,l)),shininess);return spec;}float blendSoftLight(float base,float blend){return(blend<.5)?(2.*base*blend+base*base*(1.-2.*blend)):(sqrt(base)*(2.*blend-1.)+2.*base*(1.-blend));}vec3 blendSoftLight(vec3 base,vec3 blend){return vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));}vec2 distort(vec2 p){vec2 m=uMouse;p.x-=(uRandom-m.x*.8)*.5;p.y-=uRandom*.1-iTime*.1;p.x-=.25;p.y-=.5;p=rotate(p,uRandom);p*=2.;return p;}vec3 distortNormal(vec3 p){p*=vec3(-1.*uRandom*15.,-1.*uRandom*15.,30.5);return p;}vec4 lighting(vec3 tex,vec3 normal){vec4 viewLightPosition=viewMatrix*vec4(uLightPosition,0.);vec3 N=normalize(normal);vec3 L=normalize(viewLightPosition.xyz);vec3 dif=tex*uLightColor*diffuse(N,L);vec3 C=-normalize(vMvPosition.xyz);vec3 R=reflect(-L,N);vec3 spe=uLightColor*specular(R,C,500.);vec4 lightingColor=vec4(dif+spe,.5);vec3 softlight=blendSoftLight(tex,spe);float dotRC=dot(R,C);float theta=acos(dotRC/length(R)*length(C));float a=1.-theta*.3;vec4 col=vec4(tex,a*.01)+vec4(softlight,.02)+(lightingColor*a);return col;}void main(){vec2 p=vUv;vec3 N=vNormal;p=distort(p);N=distortNormal(N);vec4 tex=texture(uTexture,p);vec4 col=tex;col=lighting(tex.xyz,N);gl_FragColor=col;}",side:s.DoubleSide,transparent:!0,uniforms:{uTexture:{value:null},uLightPosition:{value:new s.Vector3(-.2,-.2,3)},uLightColor:{value:new s.Color("#eeeeee")},uRandom:{value:s.MathUtils.randFloat(.1,1.1)},uMouse:{value:new s.Vector2(.5,.5)},uLayerId:{value:0}}});class l extends r.Component{points;mesh;uj;constructor(e,t={}){super(e);const{material:o,points:i=[]}=t;this.points=r.polySort(i);const n=r.createPolygonShape(this.points,{scale:.01}),a=new s.ExtrudeGeometry(n,{steps:1,depth:1e-4,bevelEnabled:!0,bevelThickness:5e-4,bevelSize:5e-4,bevelSegments:1});a.center();const c=o?.clone();c&&(c.uniforms.uRandom.value=s.MathUtils.randFloat(.1,1.1));const l=new s.Mesh(a,c);this.mesh=l;const v=new r.UniformInjector(this.base);this.uj=v}addExisting(){this.container.add(this.mesh)}update(){const e=this.mesh.material;this.uj.injectShadertoyUniforms(e.uniforms),o.to(e.uniforms.uMouse.value,{x:this.base.interactionManager.mouse.x}),o.to(e.uniforms.uMouse.value,{y:this.base.interactionManager.mouse.y});const t=.01*this.base.clock.elapsedTime;e.uniforms.uLightPosition.value.copy(new s.Vector3(Math.cos(t),Math.sin(t),10))}}class v extends r.Component{g;frags;constructor(e,t={}){super(e);const{material:o,layerId:i=0,polygons:n}=t,r=new s.Group;this.g=r;const a=n?.map(((e,t)=>{const n=new l(this.base,{material:o,points:e});n.container=this.container,n.addExisting();const a=n.points[0];return n.mesh.position.set(.01*a.x,-.01*a.y,s.MathUtils.randFloat(-3,-1)),n.mesh.material.uniforms.uLayerId.value=i,r.add(n.mesh),n}));this.g.position.z=2-1.5*i,this.frags=a}addExisting(){this.container.add(this.g)}}class u extends r.Component{material;uj;isShadertoyUniformInjected;fgs;totalG;floatDistance;floatSpeed;floatMaxDistance;isDashing;constructor(e,t={}){super(e);const{material:o=c,isShadertoyUniformInjected:i=!0}=t;this.material=o,this.uj=new r.UniformInjector(this.base),this.isShadertoyUniformInjected=i,i&&(o.uniforms={...o.uniforms,...this.uj.shadertoyUniforms});const n=new s.Group;this.container.add(n),n.position.copy(new s.Vector3(-.36,.36,.1));const a=((e={})=>{const{gridX:t=10,gridY:o=20,maxX:i=9,maxY:n=9}=e,r=[];for(let e=0;e<t;e++)for(let t=0;t<o;t++){const o=[];let a=3;const c=Math.random();c>0&&c<=.2?a=3:c>.2&&c<=.55?a=4:c>.55&&c<=.9?a=5:c>.9&&c<=.95?a=6:c>.95&&c<=1&&(a=7);let l={x:0,y:0},v=s.MathUtils.randFloat(0,2*Math.PI);for(let r=0;r<a;r++)if(0===r)l={x:e%i*10,y:t%n*10},o.push(l);else{const e=10;v+=s.MathUtils.randFloat(0,Math.PI/2);const t={x:l.x+e*Math.cos(v),y:l.y+e*Math.sin(v)};o.push(t)}r.push(o)}return r})(),l=[...Array(2).keys()].map(((e,t)=>{const i=new v(this.base,{material:o,layerId:t,polygons:a});return i.container=this.container,i.addExisting(),n.add(i.g),i}));this.fgs=l;const u=(new s.Group).copy(n.clone());u.position.y=n.position.y-1;const f=new s.Group;f.add(n),f.add(u),this.totalG=f,this.floatDistance=0,this.floatSpeed=1,this.floatMaxDistance=1,this.isDashing=!1}addExisting(){this.container.add(this.totalG)}update(){this.isShadertoyUniformInjected&&this.uj.injectShadertoyUniforms(this.material.uniforms),this.floatDistance+=this.floatSpeed;const e=.001*this.floatDistance;e>this.floatMaxDistance&&(this.floatDistance=0),this.totalG&&(this.totalG.position.y=e)}speedUp(){o.to(this,{floatSpeed:50,duration:4,ease:"power2.in"})}speedDown(){o.to(this,{floatSpeed:1,duration:6,ease:"power3.inOut"})}async dash(e=5e3,t){this.isDashing||(this.isDashing=!0,this.speedUp(),await r.sleep(e),t&&t(),this.speedDown())}changeTexture(e){this.fgs.forEach((t=>{t.frags.forEach((t=>{e.wrapS=s.RepeatWrapping,e.wrapT=s.RepeatWrapping,t.mesh.material.uniforms.uTexture.value=e}))}))}}class f extends r.Component{uj;ico;materialShape;materialEdge;shapeMesh;edgeMesh;constructor(e,t){super(e),this.uj=new r.UniformInjector(this.base);const o=new s.Group;this.ico=o,t.wrapS=t.wrapT=s.MirroredRepeatWrapping;const i=new s.IcosahedronGeometry(1,1),n=new s.ShaderMaterial({vertexShader:"#define GLSLIFY 1\n#define GLSLIFY 1\nvec4 getWorldPosition(mat4 modelMat,vec3 pos){vec4 worldPosition=modelMat*vec4(pos,1.);return worldPosition;}vec3 getEyeVector(mat4 modelMat,vec3 pos,vec3 camPos){vec4 worldPosition=getWorldPosition(modelMat,pos);vec3 eyeVector=normalize(worldPosition.xyz-camPos);return eyeVector;}vec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}vec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.-15.)+10.);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1./7.);vec4 gy0=fract(floor(gx0)*(1./7.))-.5;gx0=fract(gx0);vec4 gz0=vec4(.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.));gx0-=sz0*(step(0.,gx0)-.5);gy0-=sz0*(step(0.,gy0)-.5);vec4 gx1=ixy1*(1./7.);vec4 gy1=fract(floor(gx1)*(1./7.))-.5;gx1=fract(gx1);vec4 gz1=vec4(.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.));gx1-=sz1*(step(0.,gx1)-.5);gy1-=sz1*(step(0.,gy1)-.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}varying vec2 vUv;varying vec3 vNormal;varying vec3 vEyeVector;uniform float uNoiseDensity;vec3 distort(vec3 p){vec3 noise=pow(cnoise(normal),3.)*normal*uNoiseDensity;vec3 dp=p+noise;return dp;}void main(){vec3 p=position;vec3 dp=distort(p);gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;vNormal=normalize(normalMatrix*normal);vEyeVector=getEyeVector(modelMatrix,p,cameraPosition);}",fragmentShader:"#define GLSLIFY 1\n#define GLSLIFY 1\nvec3 computeNormal(vec3 normal){vec3 X=dFdx(normal);vec3 Y=dFdy(normal);vec3 cNormal=normalize(cross(X,Y));return cNormal;}float fresnel(float bias,float scale,float power,vec3 I,vec3 N){return bias+scale*pow(1.+dot(I,N),power);}vec2 hash22(vec2 p){p=fract(p*vec2(5.3983,5.4427));p+=dot(p.yx,p.xy+vec2(21.5351,14.3137));return fract(vec2(p.x*p.y*95.4337,p.x*p.y*97.597));}uniform sampler2D uTexture;uniform float uRefractionStrength;uniform float uRandomEnabled;varying vec2 vUv;varying vec3 vNormal;varying vec3 vEyeVector;void main(){vec2 newUv=vUv;vec3 cNormal=computeNormal(vNormal);float diffuse=dot(cNormal,vec3(1.));vec2 rand=hash22(vec2(floor(diffuse*10.)));vec2 strength=vec2(sign((rand.x-.5))+(rand.x-.5)*.6,sign((rand.y-.5))+(rand.y-.5)*.6);vec2 s=vec2(1.);if(uRandomEnabled==1.){s*=strength;}newUv=s*gl_FragCoord.xy/vec2(1000.);vec3 refraction=.3*refract(vEyeVector,cNormal,1./3.);newUv+=refraction.xy;vec4 tex=texture(uTexture,newUv);vec4 color=tex;float F=fresnel(0.,1.,2.,vEyeVector,cNormal);gl_FragColor=color;}",side:s.DoubleSide,uniforms:{...this.uj.shadertoyUniforms,uTexture:{value:t},uRefractionStrength:{value:0},uRandomEnabled:{value:1},uNoiseDensity:{value:0}}});this.materialShape=n;const a=new s.Mesh(i,n);this.shapeMesh=a;const c=new s.IcosahedronGeometry(1.001,1);r.getBaryCoord(c);const l=new s.ShaderMaterial({vertexShader:"#define GLSLIFY 1\n#define GLSLIFY 1\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}vec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.-15.)+10.);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1./7.);vec4 gy0=fract(floor(gx0)*(1./7.))-.5;gx0=fract(gx0);vec4 gz0=vec4(.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.));gx0-=sz0*(step(0.,gx0)-.5);gy0-=sz0*(step(0.,gy0)-.5);vec4 gx1=ixy1*(1./7.);vec4 gy1=fract(floor(gx1)*(1./7.))-.5;gx1=fract(gx1);vec4 gz1=vec4(.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.));gx1-=sz1*(step(0.,gx1)-.5);gy1-=sz1*(step(0.,gy1)-.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}varying vec2 vUv;varying vec3 vCenter;attribute vec3 aCenter;uniform float uNoiseDensity;vec3 distort(vec3 p){vec3 noise=pow(cnoise(normal),3.)*normal*uNoiseDensity;vec3 dp=p+noise;return dp;}void main(){vec3 p=position;vec3 dp=distort(p);gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;vCenter=aCenter;}",fragmentShader:"#define GLSLIFY 1\n#define GLSLIFY 1\nfloat edgeFactorTri(vec3 center,float width){vec3 d=fwidth(center);vec3 a3=smoothstep(d*(width-.5),d*(width+.5),center);return min(min(a3.x,a3.y),a3.z);}uniform float uWidth;varying vec2 vUv;varying vec3 vCenter;void main(){float line=1.-edgeFactorTri(vCenter,uWidth);if(line<.1){discard;}vec3 color=vec3(vec2(line),1.);gl_FragColor=vec4(color,1.);}",side:s.DoubleSide,uniforms:{...this.uj.shadertoyUniforms,uWidth:{value:1},uNoiseDensity:{value:0}}});this.materialEdge=l;const v=new s.Mesh(c,l);this.edgeMesh=v}addExisting(){this.container.add(this.ico),this.ico.add(this.shapeMesh),this.ico.add(this.edgeMesh)}update(e){this.uj&&(this.uj.injectShadertoyUniforms(this.materialShape.uniforms),this.uj.injectShadertoyUniforms(this.materialEdge.uniforms))}autoRotate(){const e=this.base.clock.elapsedTime;this.ico.rotation.x=e/15,this.ico.rotation.y=e/15}}class d extends s.ShaderMaterial{constructor(e={}){const{colors:t=[new s.Color("#427062"),new s.Color("#33594E"),new s.Color("#234549"),new s.Color("#1E363F")],brightnessThresholds:o=[.9,.45,.001],lightPosition:i=new s.Vector3(15,15,15)}=e;super({vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;varying vec3 vNormal;varying vec3 vWorldPosition;\n#define GLSLIFY 1\nvec4 getWorldPosition(mat4 modelMat,vec3 pos){vec4 worldPosition=modelMat*vec4(pos,1.);return worldPosition;}void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;vNormal=normalize(normalMatrix*normal);vWorldPosition=getWorldPosition(modelMatrix,p).xyz;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;varying vec3 vNormal;varying vec3 vWorldPosition;uniform vec3 uColors[4];uniform float uBrightnessThresholds[3];uniform vec3 uLightPosition;float diffuse(vec3 n,vec3 l){float diff=saturate(dot(n,l));return diff;}float lighting(){vec3 N=vNormal;vec3 I=normalize(uLightPosition-vWorldPosition);float diff=diffuse(N,I);return diff;}void main(){vec3 col=vec3(0.);float brightness=lighting();col=uColors[0];if(brightness>uBrightnessThresholds[0]){col=uColors[1];}else if(brightness>uBrightnessThresholds[1]){col=uColors[2];}else if(brightness>uBrightnessThresholds[2]){col=uColors[3];}gl_FragColor=vec4(col,1.);}",uniforms:{uColors:{value:t},uBrightnessThresholds:{value:o},uLightPosition:{value:i}}})}}
/**
 * postprocessing v6.29.3 build Sun Jan 01 2023
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2023 Raoul van Rüschen
 * @license Zlib
 */var m=0,x=1,g=2,p=3,h=4,y=5,z=6,b=7,S=8,w=9,P=10,C=11,M=12,L=13,G=14,F=15,U=16,T=17,I=18,R=19,_=20,V=21,E=22,N=23,D=24,B=25,j=26,Y=27,A=28,H=29,O=30,W=31,q=32,X=0,k=new t.Camera,Z=null;var $=class{constructor(e="Pass",o=new t.Scene,i=k){this.name=e,this.renderer=null,this.scene=o,this.camera=i,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;null!==t&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return null!==this.screen?this.screen.material:null}set fullscreenMaterial(e){let o=this.screen;null!==o?o.material=e:(o=new t.Mesh(function(){if(null===Z){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),o=new Float32Array([0,0,2,0,0,2]);void 0!==(Z=new t.BufferGeometry).setAttribute?(Z.setAttribute("position",new t.BufferAttribute(e,3)),Z.setAttribute("uv",new t.BufferAttribute(o,2))):(Z.addAttribute("position",new t.BufferAttribute(e,3)),Z.addAttribute("uv",new t.BufferAttribute(o,2)))}return Z}(),e),o.frustumCulled=!1,null===this.scene&&(this.scene=new t.Scene),this.scene.add(o),this.screen=o)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,o=t.BasicDepthPacking){}render(e,t,o,i,n){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,o){}dispose(){for(const e of Object.keys(this)){const o=this[e];(o instanceof t.WebGLRenderTarget||o instanceof t.Material||o instanceof t.Texture||o instanceof $)&&this[e].dispose()}}};new t.Color;var J=new Map([[m,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}"],[x,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}"],[g,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}"],[p,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[h,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}"],[y,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}"],[z,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}"],[b,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}"],[S,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}"],[w,null],[P,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}"],[C,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}"],[M,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}"],[L,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}"],[G,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}"],[F,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}"],[U,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}"],[T,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}"],[I,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}"],[R,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}"],[_,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[V,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}"],[E,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}"],[N,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}"],[D,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}"],[B,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}"],[j,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}"],[Y,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[A,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}"],[H,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}"],[O,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}"],[W,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}"],[q,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}"]]),Q=class extends t.EventDispatcher{constructor(e,o=1){super(),this._blendFunction=e,this.opacity=new t.Uniform(o)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return J.get(this.blendFunction)}},K=class extends t.EventDispatcher{constructor(e,o,{attributes:i=X,blendFunction:n=N,defines:r=new Map,uniforms:s=new Map,extensions:a=null,vertexShader:c=null}={}){super(),this.name=e,this.renderer=null,this.attributes=i,this.fragmentShader=o,this.vertexShader=c,this.defines=r,this.uniforms=s,this.extensions=a,this.blendMode=new Q(n),this.blendMode.addEventListener("change",(e=>this.setChanged())),this._inputColorSpace=t.LinearEncoding,this._outputColorSpace=null}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,o=t.BasicDepthPacking){}update(e,t,o){}setSize(e,t){}initialize(e,t,o){}dispose(){for(const e of Object.keys(this)){const o=this[e];(o instanceof t.WebGLRenderTarget||o instanceof t.Material||o instanceof t.Texture||o instanceof $)&&this[e].dispose()}}};new t.Vector3,new t.Matrix4,new t.Color,new t.Vector3,new t.Vector3;class ee extends r.Component{urls;speed;imageSize;mat;geo;meshs;isRunning;constructor(e,t={}){super(e);const{urls:o=[],speed:i=1,imageSize:n=5}=t;this.urls=o,this.speed=i,this.imageSize=n;const r=new s.MeshBasicMaterial({side:s.DoubleSide});this.mat=r;const a=new s.CircleGeometry(this.imageSize,64);this.geo=a,this.meshs=[],this.isRunning=!1}addMesh(){const e=this.mat.clone(),t=new s.Mesh(this.geo,e);return this.container.add(t),t}addImage(e){return new Promise((t=>{(new s.TextureLoader).load(e,(e=>{const o=this.addMesh();this.meshs.push(o),o.material.map=e,t(o)}),(()=>{}),(()=>{t(!0)}))}))}async addImages(e){await Promise.all(e.map((e=>this.addImage(e))))}async addExisting(){await this.addImages(this.urls),this.emit("ready"),this.randomizeMeshesPos(),this.run()}update(){if(this.mat&&this.meshs){if(!this.isRunning)return;this.meshs.forEach((e=>{e.position.z=(e.position.z-2*this.speed)%2e3}))}}getRandomXY(){const e=s.MathUtils.randFloat(0,360),t=s.MathUtils.randFloat(10,50);return{x:t*Math.cos(e),y:t*Math.sin(e)}}getRandomPos(){const{x:e,y:t}=this.getRandomXY(),o=s.MathUtils.randFloat(-1e3,1e3);return new s.Vector3(e,t,o)}randomizeMeshesPos(){this.meshs&&this.meshs.forEach((e=>{const t=this.getRandomPos();e.position.copy(t)}))}run(){this.isRunning=!0}stop(){this.isRunning=!1}async addImageAtRandXY(e){const t=await this.addImage(e),{x:o,y:i}=this.getRandomXY(),n=new s.Vector3(o,i,-900);t.position.copy(n)}}class te extends r.Component{sq;mouse1Lerp;mouse2Lerp;offsetX1;offsetY1;offsetX2;offsetY2;constructor(e,t,o={}){super(e);const{size:i=.28,glow:n=.005,mouse1Lerp:a=.1,mouse2Lerp:c=.09}=o;this.mouse1Lerp=a,this.mouse2Lerp=c;const l=new r.ScreenQuad(this.base,{shadertoyMode:!0,fragmentShader:"#define GLSLIFY 1\nuniform vec2 uMouse1;uniform vec2 uMouse2;uniform float uSize;uniform vec2 uAspect;uniform samplerCube uCubemap;\n#define SHOW_ISOLINE 0\nconst float PI=3.14159265359;const float TWO_PI=6.28318530718;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float opUnion(float d1,float d2){return min(d1,d2);}vec2 opUnion(vec2 d1,vec2 d2){return(d1.x<d2.x)?d1:d2;}float opSmoothUnion(float d1,float d2,float k){float h=max(k-abs(d1-d2),0.);return min(d1,d2)-h*h*.25/k;}vec2 normalizeScreenCoords(vec2 screenCoord,vec2 resolution,vec2 aspect){vec2 uv=screenCoord/resolution.xy;uv-=vec2(.5);uv*=aspect;return uv;}mat3 setCamera(in vec3 ro,in vec3 ta,float cr){vec3 cw=normalize(ta-ro);vec3 cp=vec3(sin(cr),cos(cr),0.);vec3 cu=normalize(cross(cw,cp));vec3 cv=(cross(cu,cw));return mat3(cu,cv,cw);}vec3 getRayDirection(vec2 p,vec3 ro,vec3 ta,float fl){mat3 ca=setCamera(ro,ta,0.);vec3 rd=ca*normalize(vec3(p,fl));return rd;}float saturate(float a){return clamp(a,0.,1.);}float diffuse(vec3 n,vec3 l){float diff=saturate(dot(n,l));return diff;}float specular(vec3 n,vec3 l,float shininess){float spec=pow(saturate(dot(n,l)),shininess);return spec;}float fresnel(float bias,float scale,float power,vec3 I,vec3 N){return bias+scale*pow(1.+dot(I,N),power);}mat2 rotation2d(float angle){float s=sin(angle);float c=cos(angle);return mat2(c,-s,s,c);}mat4 rotation3d(vec3 axis,float angle){axis=normalize(axis);float s=sin(angle);float c=cos(angle);float oc=1.-c;return mat4(oc*axis.x*axis.x+c,oc*axis.x*axis.y-axis.z*s,oc*axis.z*axis.x+axis.y*s,0.,oc*axis.x*axis.y+axis.z*s,oc*axis.y*axis.y+c,oc*axis.y*axis.z-axis.x*s,0.,oc*axis.z*axis.x-axis.y*s,oc*axis.y*axis.z+axis.x*s,oc*axis.z*axis.z+c,0.,0.,0.,0.,1.);}vec2 rotate(vec2 v,float angle){return rotation2d(angle)*v;}vec3 rotate(vec3 v,vec3 axis,float angle){return(rotation3d(axis,angle)*vec4(v,1.)).xyz;}mat3 rotation3dX(float angle){float s=sin(angle);float c=cos(angle);return mat3(1.,0.,0.,0.,c,s,0.,-s,c);}vec3 rotateX(vec3 v,float angle){return rotation3dX(angle)*v;}mat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.,-s,0.,1.,0.,s,0.,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}mat3 rotation3dZ(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,s,0.,-s,c,0.,0.,0.,1.);}vec3 rotateZ(vec3 v,float angle){return rotation3dZ(angle)*v;}const float gamma=2.2;float toGamma(float v){return pow(v,1./gamma);}vec2 toGamma(vec2 v){return pow(v,vec2(1./gamma));}vec3 toGamma(vec3 v){return pow(v,vec3(1./gamma));}vec4 toGamma(vec4 v){return vec4(toGamma(v.rgb),v.a);}float sdSphere(vec3 p,float s){return length(p)-s;}vec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}vec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.-15.)+10.);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1./7.);vec4 gy0=fract(floor(gx0)*(1./7.))-.5;gx0=fract(gx0);vec4 gz0=vec4(.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.));gx0-=sz0*(step(0.,gx0)-.5);gy0-=sz0*(step(0.,gy0)-.5);vec4 gx1=ixy1*(1./7.);vec4 gy1=fract(floor(gx1)*(1./7.))-.5;gx1=fract(gx1);vec4 gz1=vec4(.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.));gx1-=sz1*(step(0.,gx1)-.5);gy1-=sz1*(step(0.,gy1)-.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}float blendScreen(float base,float blend){return 1.-((1.-base)*(1.-blend));}vec3 blendScreen(vec3 base,vec3 blend){return vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));}vec3 saturation(vec3 rgb,float adjustment){const vec3 W=vec3(.2125,.7154,.0721);vec3 intensity=vec3(dot(rgb,W));return mix(intensity,rgb,adjustment);}vec4 RGBShift(sampler2D t,vec2 rUv,vec2 gUv,vec2 bUv){vec4 color1=texture(t,rUv);vec4 color2=texture(t,gUv);vec4 color3=texture(t,bUv);vec4 color=vec4(color1.r,color2.g,color3.b,color2.a);return color;}vec3 distort(vec3 p){float t=iTime*.5;float distortStr=1.6;vec3 distortP=p+cnoise(vec3(p*PI*distortStr+t));float perlinStr=cnoise(vec3(distortP*PI*distortStr*.1));vec3 dispP=p;dispP+=(p*perlinStr*.1);return dispP;}vec2 map(in vec3 pos){vec2 res=vec2(1e10,0.);pos=distort(pos);vec2 m1=uMouse1.xy;m1*=uAspect;vec2 m2=uMouse2.xy;m2*=uAspect;{float r=uSize;vec3 d1p=pos;d1p-=vec3(m1*2.,0.);float d1=sdSphere(d1p,r);vec3 d2p=pos;d2p-=vec3(m2*2.,0.);float d2=sdSphere(d2p,r-.05);d2=opSmoothUnion(d2,d1,.2);res=opUnion(res,vec2(d2,114514.));}return res;}vec2 raycast(in vec3 ro,in vec3 rd,in float tMax){vec2 res=vec2(0.,-1.);float t=0.;for(int i=0;i<4;i++){vec3 p=ro+t*rd;vec2 h=map(p);if(h.x<.001||t>(tMax+GLOW)){break;};t+=h.x;res=vec2(t,h.y);}return res;}vec3 calcNormal(vec3 pos,float eps){const vec3 v1=vec3(1.,-1.,-1.);const vec3 v2=vec3(-1.,-1.,1.);const vec3 v3=vec3(-1.,1.,-1.);const vec3 v4=vec3(1.,1.,1.);return normalize(v1*map(pos+v1*eps).x+v2*map(pos+v2*eps).x+v3*map(pos+v3*eps).x+v4*map(pos+v4*eps).x);}vec3 calcNormal(vec3 pos){return calcNormal(pos,.002);}vec3 drawIsoline(vec3 col,vec3 pos){float d=map(pos).x;col*=1.-exp(-6.*abs(d));col*=.8+.2*cos(150.*d);col=mix(col,vec3(1.),1.-smoothstep(0.,.01,abs(d)));return col;}vec3 material(in vec3 col,in vec3 pos,in float m,in vec3 nor){col=vec3(0.);if(m==114514.){if(SHOW_ISOLINE==1){col=drawIsoline(col,vec3(pos.x*1.,pos.y*0.,pos.z*1.));}}return col;}vec3 lighting(in vec3 col,in vec3 pos,in vec3 rd,in vec3 nor,in float t,in vec2 screenUv){vec3 lin=col;vec3 m=vec3(uMouse1*iResolution.xy,0.);vec3 viewDir=normalize(vec3(0.)-vec3(m.x/(iResolution.x*.25),m.y/(iResolution.y*.25),-2.));vec3 I=normalize(nor.xyz-viewDir);float distanceMouse=distance(uMouse1,vec2(0.))*.1;float fOffset=-1.4*(1.-distanceMouse*2.);float f=fOffset+fresnel(0.,1.,1.,I,nor)*1.44;float f2=fOffset+fresnel(1.,1.,1.,rd,nor)*1.44;vec3 fCol=vec3(saturate(pow(f-.8,3.)));lin=blendScreen(lin,fCol);vec3 cubeTex=texture(uCubemap,vec3(screenUv,0.)).rgb;vec3 cubeTexSat=saturation(cubeTex,6.);vec3 cubeTexF=blendScreen(mix(vec3(0.),cubeTexSat,fCol),fCol);lin=blendScreen(lin,cubeTexF);vec3 iri=vec3(0.);float iriSrength=10.;iri.r=smoothstep(cubeTexF.r*iriSrength,0.,.5);iri.g=smoothstep(cubeTexF.g*iriSrength,0.,.5);iri.b=smoothstep(cubeTexF.b*iriSrength,0.,.5);lin=blendScreen(lin,iri);vec3 iri2=vec3(0.);iri2.r=smoothstep(0.,.25,cubeTexF.r);iri2.g=smoothstep(0.,.25,cubeTexF.r);iri2.b=smoothstep(0.,.25,cubeTexF.r);lin=blendScreen(lin,iri2);vec3 mf=vec3(0.);float fFactor=pow(f+f2,1.24);float invertFFactor=-fFactor+3.;mf=vec3(invertFFactor);mf*=.1;lin=blendScreen(lin,mf);return lin;}vec4 render(in vec3 ro,in vec3 rd,in vec2 screenUv){vec4 col=vec4(0.);float tMax=2.15;vec2 res=raycast(ro,rd,tMax);float t=res.x;float m=res.y;if(t<tMax){vec3 pos=ro+t*rd;vec3 nor=calcNormal(pos);vec3 result=vec3(0.);result=material(result,pos,m,nor);result=lighting(result,pos,rd,nor,t,screenUv);col=vec4(result,1.);}if(t>tMax&&t<(tMax+GLOW)){vec3 glowColor=vec3(1.);float glowAlpha=map(t,tMax,tMax+GLOW,1.,0.);col=vec4(glowColor,glowAlpha);}return col;}vec4 getSceneColor(vec2 fragCoord){vec2 p=normalizeScreenCoords(fragCoord,iResolution.xy,uAspect);vec3 ro=vec3(0.,0.,2.);vec3 rd=normalize(vec3(p,-1.));vec2 screenUv=fragCoord.xy/iResolution.xy;vec4 col=render(ro,rd,screenUv);return col;}void mainImage(out vec4 fragColor,in vec2 fragCoord){vec4 tot=vec4(0.);float AA_size=1.;float count=0.;for(float aaY=0.;aaY<AA_size;aaY++){for(float aaX=0.;aaX<AA_size;aaX++){tot+=getSceneColor(fragCoord+vec2(aaX,aaY)/AA_size);count+=1.;}}tot/=count;fragColor=tot;}",uniforms:{uMouse1:{value:new s.Vector2(0,0)},uMouse2:{value:new s.Vector2(0,0)},uSize:{value:i},uAspect:{value:new s.Vector2(1,1)},uCubemap:{value:null}}});this.sq=l,l.material.transparent=!0,l.material.defines={GLOW:n},l.material.uniforms.uCubemap.value=t,this.offsetX1=0,this.offsetY1=0,this.offsetX2=0,this.offsetY2=0,l.container=this.container}addExisting(){this.sq.addExisting()}update(e){window.innerHeight/window.innerWidth>1?this.sq.material.uniforms.uAspect.value=new s.Vector2(window.innerWidth/window.innerHeight,1):this.sq.material.uniforms.uAspect.value=new s.Vector2(1,window.innerHeight/window.innerWidth)}followMouse(){const e=new s.Vector2(this.base.iMouse.mouseScreen.x/window.innerWidth,this.base.iMouse.mouseScreen.y/window.innerHeight),t=this.mouse1Lerp,o=this.mouse2Lerp;this.offsetX1=s.MathUtils.lerp(this.offsetX1,e.x,t),this.offsetY1=s.MathUtils.lerp(this.offsetY1,e.y,t),this.offsetX2=s.MathUtils.lerp(this.offsetX2,this.offsetX1,o),this.offsetY2=s.MathUtils.lerp(this.offsetY2,this.offsetY1,o),this.sq.material.uniforms.uMouse1.value=new s.Vector2(this.offsetX1,this.offsetY1),this.sq.material.uniforms.uMouse2.value=new s.Vector2(this.offsetX2,this.offsetY2)}}class oe extends r.Component{ce;normalFBO;constructor(e,t={}){super(e);const{texture:o=(new s.TextureLoader).load("https://s2.loli.net/2022/12/04/lNdGHYIazT4mfcC.png"),pencilColor:i="#521F33",bgColor:n="#ffffff"}=t,a=new r.CustomEffect(e,{vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;uniform sampler2D tDiffuse;uniform sampler2D tNormals;uniform sampler2D uTexture;uniform vec3 uPencilColor;uniform vec3 uBgColor;vec2 grad(ivec2 z){int n=z.x+z.y*11111;n=(n<<13)^n;n=(n*(n*n*15731+789221)+1376312589)>>16;\n#if 0\nreturn vec2(cos(float(n)),sin(float(n)));\n#else\nn&=7;vec2 gr=vec2(n&1,n>>1)*2.-1.;return(n>=6)?vec2(0.,gr.x):(n>=4)?vec2(gr.x,0.):gr;\n#endif\n}float noise(in vec2 p){ivec2 i=ivec2(floor(p));vec2 f=fract(p);vec2 u=f*f*(3.-2.*f);return mix(mix(dot(grad(i+ivec2(0,0)),f-vec2(0.,0.)),dot(grad(i+ivec2(1,0)),f-vec2(1.,0.)),u.x),mix(dot(grad(i+ivec2(0,1)),f-vec2(0.,1.)),dot(grad(i+ivec2(1,1)),f-vec2(1.,1.)),u.x),u.y);}float saturate(float a){return clamp(a,0.,1.);}float luma(vec3 color){return dot(color,vec3(.299,.587,.114));}float luma(vec4 color){return dot(color.rgb,vec3(.299,.587,.114));}float valueAtPoint(sampler2D image,vec2 coord,vec2 texel,vec2 point){return luma(texture(image,coord+texel*point).xyz);}float diffuseValue(int x,int y){return valueAtPoint(tDiffuse,vUv,vec2(1./iResolution.x,1./iResolution.y),vec2(x,y))*.6;}float normalValue(int x,int y){float cutoff=50.;float offset=.5/cutoff;float noiseValue=clamp(texture(uTexture,vUv).r,0.,cutoff)/cutoff-offset;return valueAtPoint(tNormals,vUv+noiseValue,vec2(1./iResolution.x,1./iResolution.y),vec2(x,y))*.3;}float getValue(int x,int y){float noiseValue=noise(gl_FragCoord.xy);noiseValue=noiseValue*2.-1.;noiseValue*=10.;return diffuseValue(x,y)+normalValue(x,y)*noiseValue;}float combinedSobelValue(){const mat3 Gx=mat3(-1,-2,-1,0,0,0,1,2,1);const mat3 Gy=mat3(-1,0,1,-2,0,2,-1,0,1);float tx0y0=getValue(-1,-1);float tx0y1=getValue(-1,0);float tx0y2=getValue(-1,1);float tx1y0=getValue(0,-1);float tx1y1=getValue(0,0);float tx1y2=getValue(0,1);float tx2y0=getValue(1,-1);float tx2y1=getValue(1,0);float tx2y2=getValue(1,1);float valueGx=Gx[0][0]*tx0y0+Gx[1][0]*tx1y0+Gx[2][0]*tx2y0+Gx[0][1]*tx0y1+Gx[1][1]*tx1y1+Gx[2][1]*tx2y1+Gx[0][2]*tx0y2+Gx[1][2]*tx1y2+Gx[2][2]*tx2y2;float valueGy=Gy[0][0]*tx0y0+Gy[1][0]*tx1y0+Gy[2][0]*tx2y0+Gy[0][1]*tx0y1+Gy[1][1]*tx1y1+Gy[2][1]*tx2y1+Gy[0][2]*tx0y2+Gy[1][2]*tx1y2+Gy[2][2]*tx2y2;float G=(valueGx*valueGx)+(valueGy*valueGy);return saturate(G);}void main(){vec2 p=vUv;float sobelValue=combinedSobelValue();sobelValue=smoothstep(.01,.03,sobelValue);vec4 lineColor=vec4(uPencilColor,1.);if(sobelValue>.1){gl_FragColor=lineColor;}else{gl_FragColor=vec4(uBgColor,1.);}}",uniforms:{tNormals:{value:null},uTexture:{value:o},uPencilColor:{value:new s.Color(i)},uBgColor:{value:new s.Color(n)}}});this.ce=a;const c=new r.FBO(this.base);c.rt.texture.type=s.HalfFloatType,c.rt.texture.minFilter=s.NearestFilter,c.rt.texture.magFilter=s.NearestFilter,this.normalFBO=c}addExisting(){this.ce.addExisting()}update(e){this.base.renderer.setRenderTarget(this.normalFBO.rt);const t=this.container.overrideMaterial;this.container.overrideMaterial=new s.MeshNormalMaterial;const o=this.container,i=this.base.camera;this.base.renderer.render(o,i),this.container.overrideMaterial=t,this.ce.customPass.material.uniforms.tNormals.value=this.normalFBO.rt.texture,this.base.renderer.setRenderTarget(null)}}class ie extends r.Component{ce;constructor(e,t={}){super(e);const{intensity:o=1}=t,i=new r.CustomEffect(e,{vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float uIntensity;vec4 RGBShift(sampler2D t,vec2 rUv,vec2 gUv,vec2 bUv){vec4 color1=texture(t,rUv);vec4 color2=texture(t,gUv);vec4 color3=texture(t,bUv);vec4 color=vec4(color1.r,color2.g,color3.b,color2.a);return color;}highp float random(vec2 co){highp float a=12.9898;highp float b=78.233;highp float c=43758.5453;highp float dt=dot(co.xy,vec2(a,b));highp float sn=mod(dt,3.14);return fract(sin(sn)*c);}void main(){vec2 p=vUv;vec4 col=vec4(0.);float n=random(p+mod(iTime,1.))*.1+.5;vec2 offset=vec2(cos(n),sin(n))*.0025*uIntensity;vec2 rUv=p+offset;vec2 gUv=p;vec2 bUv=p-offset;col=RGBShift(tDiffuse,rUv,gUv,bUv);gl_FragColor=col;}",uniforms:{uIntensity:{value:o}}});this.ce=i}addExisting(){this.ce.addExisting()}}class ne extends r.Component{ce;constructor(e,t={}){super(e);const{texture:o=(new s.TextureLoader).load("https://s2.loli.net/2022/08/09/nztMbdORvp5o2CJ.png"),waveCount:i=100,intensity:n=1}=t,a=(()=>{const e=new r.RenderTexture(this.base,{rtCamera:this.base.camera});let t=0;const n=new s.PlaneGeometry(64,64),a=[];for(let t=0;t<i;t++){const t=new s.MeshBasicMaterial({map:o,transparent:!0,blending:s.AdditiveBlending,depthTest:!1,depthWrite:!1}),i=new s.Mesh(n,t);e.add(i),a.push(i),i.visible=!1,i.rotation.z=2*Math.PI*Math.random()}return this.base.update((()=>{if(this.base.iMouse.isMouseMoving){t=(t+1)%i;let e=a[t];e.visible=!0,e.position.x=this.base.iMouse.mouseScreen.x,e.position.y=this.base.iMouse.mouseScreen.y,e.material.opacity=.5,e.scale.x=.2,e.scale.y=.2}a.forEach((e=>{e.visible&&(e.rotation.z+=.02,e.material.opacity*=.96,e.scale.x=.982*e.scale.x+.108,e.scale.y=e.scale.x,e.material.opacity<.002&&(e.visible=!1))}))})),e})(),c=new r.CustomEffect(e,{vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;uniform sampler2D tDiffuse;uniform sampler2D uDisplacement;uniform float uIntensity;const float PI=3.14159265359;vec2 distort(vec2 p,sampler2D tex){vec4 displacement=texture(tex,p);float theta=displacement.x*2.*PI;vec2 dir=vec2(sin(theta),cos(theta));vec2 dp=p+dir*displacement.x*.1*uIntensity;return dp;}void main(){vec2 p=vUv;vec2 dp=distort(p,uDisplacement);vec4 color=texture(tDiffuse,dp);gl_FragColor=color;}",uniforms:{uIntensity:{value:n},uDisplacement:{value:null}}});this.ce=c,c.customPass.material.uniforms.uDisplacement.value=a.texture}addExisting(){this.ce.addExisting()}}class re extends r.Component{points;positions;htmls;lines;lineOpacity;lineColor;baseClassName;constructor(e,t={}){super(e);const{radius:o=.5,segment:i=8,pointSize:n=.01,pointOpacity:r=1,pointColor:a="white",lineOpacity:c=1,lineColor:l="white",baseClassName:v="point"}=t;this.lineOpacity=c,this.lineColor=l,this.baseClassName=v;const u=new s.SphereGeometry(o,i,i),f=new s.PointsMaterial({color:a,size:n,transparent:!0,opacity:r,depthWrite:!1}),d=new s.Points(u,f);this.points=d,this.positions=[],this.htmls=[],this.lines=[],this.getPositions()}addExisting(){this.container.add(this.points)}getPositions(){const e=this.points.geometry.attributes.position,t=r.convertBufferAttributeToVector(e),o=i.uniqWith(t,i.isEqual);this.positions=o}removeSomePositions(){this.positions=this.positions.filter((e=>!(0===Math.abs(e.x)||0===e.z||.5===Math.abs(e.y))))}randomizePositions(){this.positions=this.positions.map((e=>{const t=s.MathUtils.randFloat(.4,1),o=new s.Vector3(t,t,t);return e.multiply(o)}))}addHtmls(){const e=this.positions.map(((e,t)=>{const o=t+1,i=document.querySelector(`.${this.baseClassName}-${o}`),n=new r.Html(this.base,i,e);return n.addExisting(),n}));this.htmls=e}addLines(){const e=new s.LineBasicMaterial({color:this.lineColor,transparent:!0,opacity:this.lineOpacity,depthWrite:!1}),t=this.positions.map((t=>{const o=[this.points.position,t],i=(new s.BufferGeometry).setFromPoints(o),n=new s.Line(i,e);return this.container.add(n),n}));this.lines=t}listenForHoverHtml(e,t){this.htmls.forEach((e=>{e.el?.addEventListener("mouseover",(()=>{this.emit("mouseover",e.el)})),e.el?.addEventListener("mouseleave",(()=>{this.emit("mouseleave",e.el)}))})),this.on("mouseover",(t=>{e(t)})),this.on("mouseleave",(e=>{t(e)}))}}var se="#define GLSLIFY 1\n#define GLSLIFY 1\nhighp float random(vec2 co){highp float a=12.9898;highp float b=78.233;highp float c=43758.5453;highp float dt=dot(co.xy,vec2(a,b));highp float sn=mod(dt,3.14);return fract(sin(sn)*c);}uniform float iTime;uniform float iVelocity;attribute vec2 aSeed;attribute float aSize;varying float vRandColor;void main(){vec3 p=position;float t=iTime*1000.;float v=iVelocity;float s=v*t;p.z=mod(p.z+s,2000.);vec4 mvPosition=modelViewMatrix*vec4(p,1.);gl_Position=projectionMatrix*mvPosition;float pSize=aSize*(200./-mvPosition.z);gl_PointSize=pSize;float randColor=random(aSeed);vRandColor=randColor;}",ae="#define GLSLIFY 1\n#define GLSLIFY 1\nfloat circle(vec2 st,float r){vec2 dist=st-vec2(.5);return 1.-smoothstep(r-(r*1.15),r,dot(dist,dist)*4.);}uniform vec3 iColor1;uniform vec3 iColor2;varying float vRandColor;void main(){vec2 p=gl_PointCoord-.5+.5;vec3 color=iColor1;if(vRandColor>0.&&vRandColor<.5){color=iColor2;}float shape=circle(p,1.);vec3 col=color*shape;gl_FragColor=vec4(col,1.);}";class ce extends r.Component{count;pointColor1;pointColor2;pointSize;angularVelocity;velocity;vertexShader;fragmentShader;uj;geometry;material;points;constructor(e,t={}){super(e);const{count:o=1e4,pointColor1:i="#ff6030",pointColor2:n="#1b3984",pointSize:s=3,angularVelocity:a=0,velocity:c=.01,vertexShader:l=se,fragmentShader:v=ae}=t;this.count=o,this.pointColor1=i,this.pointColor2=n,this.pointSize=s,this.angularVelocity=a,this.velocity=c,this.vertexShader=l,this.fragmentShader=v,this.uj=new r.UniformInjector(this.base),this.geometry=null,this.material=null,this.points=null,this.create()}create(){this.dispose();const e=new s.BufferGeometry;this.geometry=e;const t=r.makeBuffer(this.count,(()=>50*s.MathUtils.randFloat(-.5,.5)));e.setAttribute("position",new s.BufferAttribute(t,3));const o=r.makeBuffer(this.count,(()=>s.MathUtils.randFloat(0,1)),2);e.setAttribute("aSeed",new s.BufferAttribute(o,2));const i=r.makeBuffer(this.count,(()=>this.pointSize+s.MathUtils.randFloat(0,1)),1);e.setAttribute("aSize",new s.BufferAttribute(i,1));const n=new s.ShaderMaterial({vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,transparent:!0,depthWrite:!1,blending:s.AdditiveBlending,uniforms:{...this.uj.shadertoyUniforms,iColor1:{value:new s.Color(this.pointColor1)},iColor2:{value:new s.Color(this.pointColor2)},iVelocity:{value:this.velocity}}});this.material=n;const a=new s.Points(e,n);this.points=a,this.changePos()}addExisting(){this.points&&this.container.add(this.points)}update(e){this.points&&(this.points.rotation.z+=.01*this.angularVelocity),this.uj&&this.material&&this.uj.injectShadertoyUniforms(this.material.uniforms)}changePos(){if(this.geometry){const e=this.geometry.attributes.position;r.iterateBuffer(e.array,this.count,((e,t)=>{const o=s.MathUtils.randFloat(0,360),i=s.MathUtils.randFloat(10,50),n=i*Math.cos(o),r=i*Math.sin(o),a=s.MathUtils.randFloat(0,2e3);e[t.x]=n,e[t.y]=r,e[t.z]=a}))}}dispose(){this.geometry&&this.geometry.dispose(),this.material&&this.material.dispose(),this.points&&this.container.remove(this.points)}}class le extends r.Component{ce;progress;constructor(e,t={}){super(e);const{intensity:o=1}=t,i=new r.CustomEffect(e,{vertexShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;varying vec2 vUv;void main(){vec3 p=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);vUv=uv;}",fragmentShader:"#define GLSLIFY 1\nuniform float iTime;uniform vec2 iResolution;uniform vec2 iMouse;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float uProgress;uniform float uIntensity;vec2 centerUv(vec2 uv){uv=uv*2.-1.;return uv;}vec2 distort(vec2 p){vec2 cp=centerUv(p);float center=distance(p,vec2(.5));vec2 offset=cp*(1.-center)*uProgress*uIntensity;p-=offset;return p;}void main(){vec2 p=vUv;p=distort(p);vec4 tex=texture(tDiffuse,p);vec4 col=tex;gl_FragColor=col;}",uniforms:{uProgress:{value:0},uIntensity:{value:o}}});this.ce=i,this.progress=0}addExisting(){this.ce.addExisting()}update(){const e=this.progress;this.ce.customPass.material.uniforms.uProgress.value=e}linkScroll(e){const t=Math.abs(e/50);this.progress=s.MathUtils.lerp(this.progress,t,.1)}}exports.CheckerboardText=a,exports.FragmentWorld=u,exports.GhibliToonMaterial=d,exports.GridIcosahedron=f,exports.HologramFilter=class extends K{constructor({blendFunction:e=N,progress:t=1,glowColor:o=new s.Color("#66ccff"),glowColorStrength:i=.3}={}){super("HologramFilter","#define GLSLIFY 1\n#define iTime time\n#define iResolution resolution\n#define iChannel0 inputBuffer\nuniform float uProgress;uniform vec3 uGlowColor;uniform float uGlowColorStrength;\n#define GLSLIFY 1\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec2 mod289(vec2 x){return x-floor(x*(1./289.))*289.;}vec3 permute(vec3 x){return mod289(((x*34.)+1.)*x);}float snoise(vec2 v){const vec4 C=vec4(.211324865405187,.366025403784439,-.577350269189626,.024390243902439);vec2 i=floor(v+dot(v,C.yy));vec2 x0=v-i+dot(i,C.xx);vec2 i1;i1=(x0.x>x0.y)?vec2(1.,0.):vec2(0.,1.);vec4 x12=x0.xyxy+C.xxzz;x12.xy-=i1;i=mod289(i);vec3 p=permute(permute(i.y+vec3(0.,i1.y,1.))+i.x+vec3(0.,i1.x,1.));vec3 m=max(.5-vec3(dot(x0,x0),dot(x12.xy,x12.xy),dot(x12.zw,x12.zw)),0.);m=m*m;m=m*m;vec3 x=2.*fract(p*C.www)-1.;vec3 h=abs(x)-.5;vec3 ox=floor(x+.5);vec3 a0=x-ox;m*=1.79284291400159-.85373472095314*(a0*a0+h*h);vec3 g;g.x=a0.x*x0.x+h.x*x0.y;g.yz=a0.yz*x12.xz+h.yz*x12.yw;return 130.*dot(m,g);}vec3 luminosity(vec3 s,vec3 d){float dLum=dot(d,vec3(.3,.59,.11));float sLum=dot(s,vec3(.3,.59,.11));float lum=sLum-dLum;vec3 c=d+lum;float minC=min(min(c.x,c.y),c.z);float maxC=max(max(c.x,c.y),c.z);if(minC<0.)return sLum+((c-sLum)*sLum)/(sLum-minC);else if(maxC>1.)return sLum+((c-sLum)*(1.-sLum))/(maxC-sLum);else return c;}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 diffuseBase=texture(iChannel0,uv);vec2 p=uv;float interval=4.;float dir=mod((p.y-iTime*.04)*iResolution.y,interval)<(interval*.5)?-1.:1.;float n1=snoise(vec2(iTime*5.,10.));float lineOffset=(4.+8.*n1)/iResolution.x;p.x+=dir*lineOffset;vec4 hologramColor=texture(iChannel0,p);float n2=snoise(vec2(iTime*2.,1.));float strength=.1+.3*(1.+n2);vec3 combinedColor=diffuseBase.rgb+hologramColor.rgb*strength;vec3 bgColor=uGlowColor*uGlowColorStrength;vec3 lumiColor=luminosity(combinedColor,bgColor);vec3 col=mix(diffuseBase.rgb,lumiColor,uProgress);outputColor=vec4(col,1.);}",{uniforms:new Map([["uProgress",new s.Uniform(t)],["uGlowColor",new s.Uniform(o)],["uGlowColorStrength",new s.Uniform(i)]]),blendFunction:e})}},exports.ImageTunnel=ee,exports.LiquidCrystal=te,exports.PencilFilter=oe,exports.RGBShiftFilter=ie,exports.RippleFilter=ne,exports.SphereWordCloud=re,exports.StarTunnel=ce,exports.SwellFilter=le;
